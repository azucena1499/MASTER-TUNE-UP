<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAANcNAADXDQAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABeSTQAXkk0AF5JNABeSTQBXkk0A15JNAFeSTQAXkk0F15JNGJeSTSoXkk02F5J
        NPJfSjX9XUgz/Uw4I/NJNSDaSjYhq0o2IWVLNyIZSTUgAEg0HwFJNSADSjYhAUo2IQBKNiEATTkjAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAXkk0AF5JNABeSTQAXkk0Al5JNANeSTQAXkk0KF5JNJteSTTuXkk0/15J
        NP5eSTT/X0o1/11IM/9NOST/SDQf/0k1IP9JNSD+STUg/0k1IPBJNSCfSjYhKkk1IABJNSADSjYgAkk1
        IABJNSAATDgjAAAAAAAAAAAAAAAAAF5JNABeSTQAXkk0AF5JNANeSTQAXkk0CV5JNI1eSTT7Xkk0/15J
        NP9eSTT9Xkk0/F9KNf5dSDP/TTkk/0g0H/9JNSD/STUg/kk1IPxJNSD9STUg/0k1IP9JNSD8STUgkEw3
        IgpPOyYASjYgA0g0HwBINB8ASzgiAAAAAABeSTQAXkk0AF5JNABeSTQDXkk0AF5JNCVeSTTSXkk0/15J
        NPxeSTT7Xkk0/l5JNP9fSjX/XUgz/005JP9INB//STUg/0k1IP9JNSD/STUg/0k1IP9JNSD+STUg+0k1
        IPxJNSD/STUg1Eo2ISdKNiEASTUgA0k1IABJNSAATTkjAF5JNABeSTQAXkk0A15JNABeSTQzXkk0615J
        NP9eSTT6Xkk0/l5JNP9eSTT/X0o1/11IM/9NOST/SDQf/0k1IP9JNSD/STUg/0k1IP9JNSD/STUg/0k1
        IP9JNSD/STUg/kk1IPpJNSD/STUg7Eo2ITZKNiEASjYhA0k1IABKNiEAXkk0AF5JNAJeSTQAXkk0J15J
        NOpeSTT/Xkk0+15JNP9eSTT/Xkk0/19KNf9dSDP/TTkk/0g0H/9JNSD/STUg/0k1IP9JNSD/STUg/0k1
        IP9JNSD/STUg/0k1If9JNSH/STUg/0k1IPtJNSD/STUg60o2ISlKNiEASjYhAks3IgBeSTQBXkk0AF5J
        NApeSTTOXkk0/15JNPteSTT/Xkk0/15JNP9eSTT/XUgz/086Jv9INB//STUg/0k1IP9JNSD/STUg/0k1
        IP9JNSD/STUg/0k1IP9JNiL/STUf/0k0H/9JNiL/STUg/0k1IPtJNSD/STUg0Ew4IwtOOiQASzchAV5J
        NANeSTQAXkk0jF5JNP9eSTT6Xkk0/15JNP9eSTT/X0o1/15JNP9MNyL/Qi4Y/0s4I/9JNSD/STUg/0k1
        IP9JNSD/STUg/0k1IP9JNSD/STcj/0oxGP9IMyL/STck/0oyGP9JNiH/STUg/0k1IPpJNSD/STUgj0k1
        IABJNSADXkk0AF5JNC1eSTT6Xkk0/15JNP5eSTT/Xkk0/2BLNv9VQCr/i3tr//Hq4v9uXUv/PCgS/0s4
        I/9JNSD/STUg/0k1IP9JNSD/STUg/0k3JP9KLhP/RkVE/0Ga3v83iOL/RENH/0oyGf9JNiL/STUg/0k1
        IP9JNSD7SjYhLko2IQBeSTQAXkk0ml5JNP9eSTT7Xkk0/15JNP9eSTT/X0o1/0k0H/9AKxX/v7et//36
        9v9tW0n/Qy4Z/0s3Iv9JNSD/STUg/0k1IP9JNyT/Si8T/0VERf9Bpu3/Npv//y6X//88aJP/Sy4Q/0k3
        JP9JNSD/STUg+0k1IP9JNSCcSDQfAF5JNBpeSTTqXkk0/15JNP5eSTT/YEw3/1I8Jv+kloj/qZ2Q/1E9
        Kf/XzsP//////6yilv8+KBL/TDgj/0k1IP9JNSD/STck/0ovE/9FREX/Qabt/zWY//8vivz/MY72/0RH
        Tv9KMhj/STYi/0k1IP9JNSD+STUg/0k1IOtLNyIcXkk0Yl5JNP9eSTT9Xkk0/15JNP9gSzb/V0Er/4x7
        av/7+PT/8ezm/////////vj/empa/zsmD/9NOiX/STQf/0k3Jf9KLhP/RURF/0Gm7f81mP//L4v8/zGP
        +P9DS1n/Sy8S/0k2I/9JNSD/STUg/0k1IP9JNSD9STUg/0o2IWReSTSnXkk0/15JNPxeSTT/Xkk0/15J
        NP9gSzf/Ujwm/4t6af///fb/49rR//Dq4v/q3tD/ZFJA/z8qFP9MOif/Sy0N/0ZFRf9Bpu3/NZj//y+L
        /P8xj/j/Q0tY/0svEP9JNyT/STUg/0k1IP9JNSD/STUg/0k1IPxJNSD/STUgqV5JNNZeSTT/Xkk0/l5J
        NP9eSTT/Xkk0/15JNP9gSzb/VkAq/3JfS/9iTTn/f21b//fp2P/q3cz/Y1NC/0AoDv9BUmv/PqHs/zaZ
        //8vi/3/MY/4/0NLWP9LLxD/STcl/0k1IP9JNSD/STUg/0k1IP9JNSD/STUg/kg0H/9OOSTXXkk08V5J
        NP9eSTT+Xkk0/15JNP9eSTT/Xkk0/15JNP9gSzb/WUQv/15JNP9UPij/gXBf//Xo1//q3s//ZU83/y5I
        Zv8wlP//L4z+/zKO9/9DS1n/Sy8Q/0k3Jf9JNSD/STUg/0k1IP9JNSD/STUg/0k1IP9HMx7+UDsm/15J
        NPFeSTT9Xkk0/15JNP9eSTT/Xkk0/15JNP9eSTT/Xkk0/15JNP9fSjX/Xko1/2FMOP9TPSf/gXBf//ns
        2//cz8D/spqA/3WKpv8ggPP/RE9f/0suDv9INyX/STUg/0k1IP9JNSD/STUg/0k1IP9JNSD/RzMe/087
        Jv9eSTT/Xkk0/V5JNP1eSTT/Xkk0/15JNP9eSTT/Xkk0/15JNP9eSTT/Xkk0/15JNP9eSTT/Xkk0/2FN
        OP9VPyn/d2ZV//vu3v/88eP/bFdB/zY0Nf9MOCL/SjYi/0o2If9JNSD/STUg/0k1IP9JNSD/STUg/0cz
        Hv9POyb/Xkk0/15JNP9eSTT9Xkk08V5JNP9eSTT+Xkk0/15JNP9eSTT/Xkk0/15JNP9eSTT/Xkk0/15J
        NP9eSTT/YU04/0o1IP+ejnv/v7Ol/+bXxv/r3s//ZVA6/0ArFv9HMx7/RTAb/0s3Iv9JNSD/STUg/0k1
        IP9HMx7/Tzsm/15JNP9eSTT+Xkk0/15JNPFeSTTWXkk0/15JNP5eSTT/Xkk0/15JNP9eSTT/Xkk0/15J
        NP9eSTT/X0o1/2JNOP9HMhz/p5iG/7mrm/9ELxj/g3Jh//bo2P/r38//YU89/1VBLf9bSTX/QCsW/0s3
        I/9JNSD/RzQf/087Jv9eSTT/Xkk0/15JNP5eSTT/Xkk01l5JNKdeSTT/Xkk0/F5JNP9eSTT/Xkk0/15J
        NP9eSTT/Xkk0/19LNv9eSTT/SDMd/6eYhv+3qJj/STQe/2JNOP9UPij/gXBe//Xq3f/o4tr/6ODX//r2
        7v9sWkj/PikT/0o2If9POyb/Xkk0/15JNP9eSTT/Xkk0/F5JNP9eSTSmXkk0Yl5JNP9eSTT9Xkk0/15J
        NP9eSTT/Xkk0/15JNP9eSTX/WkUv/1dCLf+ik4H/t6mY/0k0Hv9gSzb/Xko1/2JNOP9POSP/m4x9////
        /v/9/f3/8ezm//Xy7f9qWUb/STQf/2BLNv9eSTT/Xkk0/15JNP9eSTT9Xkk0/15JNGJeSTQaXkk06l5J
        NP9eSTT+Xkk0/15JNP9eSTT/YEs2/1ZAK/+Pfm3//Pbv/8a9sf9IMx3/YEs2/19KNf9eSTT/YEs2/1ZA
        Kv/Jwbb//////8e9sf9KNiH/ua6i/4l6av9TPSf/YEw3/15JNP9eSTT/Xkk0/l5JNP9eSTTqXkk0Gl5J
        NABeSTSaXkk0/15JNPteSTT/Xkk0/19LNv9YQi3/fGlX//v59///////kYFx/1VAKv9hTDf/Xkk0/15J
        NP9gSzb/V0Is/4t6af//////qp+T/zwnEf9MOCL/X0s2/15JNP9eSTT/Xkk0/15JNP9eSTT7Xkk0/15J
        NJpeSTQAXkk0AF5JNC1eSTT6Xkk0/15JNP5eSTT/Xkk0/15JNP9dSDP/vrGl/6aYif9TPSf/YEs2/15J
        NP9eSTT/Xkk0/15JNP9gSzb/UTsl/459bP/07eX/fWxb/1dCLP9fSzb/Xkk0/15JNP9eSTT/Xkk0/l5J
        NP9eSTT6Xkk0LV5JNABeSTQDXkk0AF5JNIxeSTT/Xkk0+l5JNP9eSTT/Xkk1/1xHMv9XQiz/WUMu/15K
        Nf9eSTT/Xkk0/15JNP9eSTT/Xkk0/15JNP9gSzb/WUMu/11IM/9fSjX/Xkk0/15JNP9eSTT/Xkk0/15J
        NP9eSTT6Xkk0/15JNI1eSTQAXkk0A15JNAFeSTQAXkk0Cl5JNM5eSTT/Xkk0+15JNP9eSTT/Xkk0/19K
        Nv9fSjX/Xkk0/15JNP9eSTT/Xkk0/15JNP9eSTT/Xkk0/15JNP9fSjb/Xkk0/15JNP9eSTT/Xkk0/15J
        NP9eSTT/Xkk0+15JNP9eSTTOXkk0Cl5JNABeSTQBXkk0AF5JNAJeSTQAXkk0KF5JNOpeSTT/Xkk0+15J
        NP9eSTT/Xkk0/15JNP9eSTT/Xkk0/15JNP9eSTT/Xkk0/15JNP9eSTT/Xkk0/15JNP9eSTT/Xkk0/15J
        NP9eSTT/Xkk0/15JNPteSTT/Xkk06l5JNCdeSTQAXkk0Al5JNABeSTQAXkk0AF5JNANeSTQAXkk0NF5J
        NOteSTT/Xkk0+l5JNP5eSTT/Xkk0/15JNP9eSTT/Xkk0/15JNP9eSTT/Xkk0/15JNP9eSTT/Xkk0/15J
        NP9eSTT/Xkk0/15JNP5eSTT6Xkk0/15JNOteSTQ0Xkk0AF5JNANeSTQAXkk0AF5JNABeSTQAXkk0AF5J
        NANeSTQAXkk0JV5JNNJeSTT/Xkk0/F5JNPteSTT+Xkk0/15JNP9eSTT/Xkk0/15JNP9eSTT/Xkk0/15J
        NP9eSTT/Xkk0/15JNP5eSTT7Xkk0/F5JNP9eSTTSXkk0JV5JNABeSTQDXkk0AF5JNABeSTQAAAAAAF5J
        NABeSTQAXkk0AF5JNANeSTQAXkk0CV5JNI1eSTT8Xkk0/15JNP9eSTT9Xkk0/F5JNP5eSTT/Xkk0/15J
        NP9eSTT/Xkk0/l5JNPxeSTT9Xkk0/15JNP9eSTT7Xkk0jV5JNAleSTQAXkk0A15JNABeSTQAXkk0AAAA
        AAAAAAAAAAAAAF5JNABeSTQAXkk0AF5JNAJeSTQDXkk0AF5JNCheSTScXkk07l5JNP9eSTT+Xkk0/15J
        NP9eSTT/Xkk0/15JNP9eSTT/Xkk0/l5JNP9eSTTvXkk0nF5JNCheSTQAXkk0A15JNAJeSTQAXkk0AF5J
        NAAAAAAAAAAAAAAAAAAAAAAAAAAAAF5JNABeSTQAXkk0AF5JNAFeSTQDXkk0AV5JNABeSTQXXkk0Yl5J
        NKheSTTYXkk08l5JNP1eSTT9Xkk08l5JNNheSTSpXkk0Y15JNBdeSTQAXkk0AV5JNANeSTQBXkk0AF5J
        NABeSTQAAAAAAAAAAAAAAAAA9EACL+kAAJfUAAArqAAAFVAAAAqgAAAFQAAAAkAAAAKAAAABgAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAGAAAABQAAAAkAA
        AAKgAAAFUAAACqgAABXUAAAr6QAAl/RAAi8=
</value>
  </data>
</root>